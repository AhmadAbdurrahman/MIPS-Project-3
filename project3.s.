# program: 1000 char string
# N = 31
# M = 21


.data
sum: .word  0 
user_string: .space 1001 
comma: .asciiz ","
error_message: .asciiz "-" 
buffer: .space 1001

.text
main:
li $v0, 8 
la $a0, buffer 
li $a1, 1001
syscall 

addi $sp, $sp, -4 
sw $a0, 0($sp) 
jal sub_a

li $v0, 10
syscall 

sub_a:
move $s6, $ra 
lw  $t6, 0($sp) 
addi $sp, $sp, -4 

addi $a3, $zero, 0
addi $t2, $zero, 0 
la $a0, user_string

sub_loop:
add $t1, $t6, $a3 
add $t4, $a0, $t2 
lb $t1, ($t1)
beq $t1, 59, go2SubB 
bgt $a3, 1000, go2SubB 
sb $t1, ($t4) 

addi $a3, $a3, 1
addi $t2, $t2, 1 
j sub_loop

go2SubB:
move $t7, $ra
addi $sp, $sp, -4 
sw $a0, 0($sp) 
jal sub_b

lw  $t7, 0($sp)
addi $sp, $sp, -4 #resets stack
beq $t7, -1, invalid

li $v0, 1
move $a0,$t7
syscall
j loop2

invalid:
li $v0,4
la $a0, error_message 
syscall

loop2:
bgt $a3, 1000, end_sub_a

li $v0, 4
la $a0, comma
syscall

addi $t2, $zero, 0
la $a0, user_string 
addi $a3, $a3, 1
j sub_loop

end_sub_a:
move $ra, $s6
jr $ra

sub_b:
move $t7,$ra
lw  $s7, 0($sp) 

move $a1,$s7
addi $a0, $zero, 0
jal firstConst
move $s1, $v0 

move $a1,$s1 
addi $a0, $zero, 0
jal endspace
move $s3, $v0 

beqz $s3, invalidchars 
bgt $s3,4 ,invalidchars 

move $a0, $s1
move $a1, $s3
jal ConstantVal
move $s5, $v1
beq $s5, -1, invalidchars
j endSub_b

firstConst:
addu $t4,$a0,$a1 
lbu $a2,0($t4)   
bne $a2,32,removefirstConst
bge $a0,1000,removefirstConst
addi $a0,$a0,1   
j firstConst    

endfirstConst:  
move $v0, $t4
jr $ra

endspace:
addi $t2, $zero, 0

loop:
addu $t4,$a0,$a1 
lbu $a2,0($t4)   
ble $a2, 47, invalid1 
ble $a2, 58, validchars 
ble $a2, 121, validchars 
j invalid1

validchars:
addi $t2, $t2, 1

invalid1:
addi $a0,$a0,1  
bgt $a0,4, removeendspace
bgt $a0,1000, removeendspace
j loop         

removeendspace:  
move $v0, $t2
jr $ra 

ConstantVal:
move $s7,$a0
addi $t9,$zero, 31      
move $t8,$a1
addi $t4,$zero, 1
addi $t1,$zero, 1 

calc_loop:
beq $t4, $t8, string_loop
mult $t1,$t9      
mflo $t1
addi $t4,$t4,1
j calc_loop

string_loop:
addi $t4,$zero, 0
addi $s2, $zero, 0
loop3:
bge $t4, $t8, EndProgram 
lb $t3, ($s7) 
ble $t3, 47, validchar 
ble $t3, 55, if09 
ble $t3, 87, ifAU 
ble $t3, 117, ifau 

validchar:
addi $s2, $zero, -1

j EndProgram

if09:
sub $s4, $t3, 48
mult $s4, $t1
mflo $s4
add $s2, $s2, $s4
div $t1, $t9
mflo $t1
addi $t4, $t4, 1 #increments i
addi $s7, $s7,1 #Increments "string register"
j loop3

ifAU:
blt $t3, 65, validchar
sub $s4, $t3, 55 
mult $s4, $t1
mflo $s4
add $s2, $s2, $s4 


div $t1, $t9
mflo $t1
addi $t4, $t4, 1 
addi $s7, $s7,1 
j loop3

ifau:
blt $t3, 97, validchar
sub $s4, $t3, 87 
mult $s4, $t1
mflo $s4
add $s2, $s2, $s4 

div $t1, $t9
mflo $t1
addi $t4, $t4, 1 
addi $s7, $s7,1 
j loop3

invalidchars:
move $ra, $t7
addi $s5, $zero, -1    
j endSub_b

EndProgram:
move $v1, $s2       
jr $ra

endSub_b:
addi $t0, $zero, 0
la $t2, user_string
loopEndb:
add $t1, $t2, $t0
lb $t3, ($t1)